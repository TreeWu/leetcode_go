package main

//1447. 最简分数
//给你一个整数 n ，请你返回所有 0 到 1 之间（不包括 0 和 1）满足分母小于等于  n 的 最简 分数 。分数可以以 任意 顺序返回。
//
//
//
//示例 1：
//
//输入：n = 2
//输出：["1/2"]
//解释："1/2" 是唯一一个分母小于等于 2 的最简分数。
//示例 2：
//
//输入：n = 3
//输出：["1/2","1/3","2/3"]
//示例 3：
//
//输入：n = 4
//输出：["1/2","1/3","1/4","2/3","3/4"]
//解释："2/4" 不是最简分数，因为它可以化简为 "1/2" 。
//示例 4：
//
//输入：n = 1
//输出：[]

// 简单做法，就是遍历生成分子分母，然后看看有没有最大公因数是不是 1
func simplifiedFractions(n int) []string {

	var res []string

	//先从分子开始遍历
	for i := 1; i < n; i++ {
		for j := i + 1; j < n; j++ {

		}
	}

	return res
}

// 求出 a b 两个数除1以外的公约数
// 碾转相除法
func CommonDivisor(a, b int) bool {
	if a < b {
		a, b = b, a
	}
	c := a % b

}
